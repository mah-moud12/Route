// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solve_Task.AireLineDB.Data;

#nullable disable

namespace Solve_Task.Migrations
{
    [DbContext(typeof(AirLineDbContext))]
    partial class AirLineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.AirCraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Host1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Host2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Maj_pilot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirCrafts");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.AirLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact_Person")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirLines");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Aircraft_Route", b =>
                {
                    b.Property<int>("AC_Id")
                        .HasColumnType("int");

                    b.Property<int>("Route_Id")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("Departure")
                        .HasColumnType("time");

                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.HasKey("AC_Id", "Route_Id", "Departure");

                    b.HasIndex("Route_Id");

                    b.ToTable("Aircraft_Routes");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.AireLinePhones", b =>
                {
                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("AL_Id", "Phone");

                    b.ToTable("AireLinePhones");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Emp_Qualification", b =>
                {
                    b.Property<int>("Emp_Id")
                        .HasColumnType("int");

                    b.Property<string>("Qualification")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Emp_Id", "Qualification");

                    b.ToTable("Emp_Qualifications");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AL_Id")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Qualifications")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AL_Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<decimal>("Distance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Origin")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Routes");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AL_Id")
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Descriptions")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AL_Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Aircraft_Route", b =>
                {
                    b.HasOne("Solve_Task.AireLineDB.Model.AirCraft", "Air_Route")
                        .WithMany()
                        .HasForeignKey("AC_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Solve_Task.AireLineDB.Model.Route", "Route")
                        .WithMany()
                        .HasForeignKey("Route_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Air_Route");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.AireLinePhones", b =>
                {
                    b.HasOne("Solve_Task.AireLineDB.Model.AirLine", "AireLine_Phone")
                        .WithMany()
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AireLine_Phone");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Emp_Qualification", b =>
                {
                    b.HasOne("Solve_Task.AireLineDB.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("Emp_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Employee", b =>
                {
                    b.HasOne("Solve_Task.AireLineDB.Model.AirLine", "Emp_Air")
                        .WithMany()
                        .HasForeignKey("AL_Id");

                    b.Navigation("Emp_Air");
                });

            modelBuilder.Entity("Solve_Task.AireLineDB.Model.Transaction", b =>
                {
                    b.HasOne("Solve_Task.AireLineDB.Model.AirLine", "Transaction_AirLine")
                        .WithMany()
                        .HasForeignKey("AL_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transaction_AirLine");
                });
#pragma warning restore 612, 618
        }
    }
}
