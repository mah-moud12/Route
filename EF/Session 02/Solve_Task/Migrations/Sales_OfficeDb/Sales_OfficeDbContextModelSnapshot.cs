// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Solve_Task.Sales_Office.Data;

#nullable disable

namespace Solve_Task.Migrations.Sales_OfficeDb
{
    [DbContext(typeof(Sales_OfficeDbContext))]
    partial class Sales_OfficeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Office_Num")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Office_Num");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Owner", b =>
                {
                    b.Property<int>("Owner_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Owner_Id"));

                    b.Property<decimal>("Precent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Prop_id")
                        .HasColumnType("int");

                    b.HasKey("Owner_Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Office_Num")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Office_Num");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Property_Owner", b =>
                {
                    b.Property<int>("Owner_Id")
                        .HasColumnType("int");

                    b.Property<int>("Prop_id")
                        .HasColumnType("int");

                    b.Property<decimal>("Precent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PropertyId")
                        .HasColumnType("int");

                    b.HasKey("Owner_Id", "Prop_id");

                    b.HasIndex("PropertyId");

                    b.ToTable("property_Owners");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Sales__Office", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Number"));

                    b.Property<int>("Emp_id")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.HasIndex("Emp_id")
                        .IsUnique();

                    b.ToTable("Sales__Offices");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Employee", b =>
                {
                    b.HasOne("Solve_Task.Sales_Office.Model.Sales__Office", "Sales__Office")
                        .WithMany("employees")
                        .HasForeignKey("Office_Num")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Sales__Office");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Property", b =>
                {
                    b.HasOne("Solve_Task.Sales_Office.Model.Sales__Office", "Sales__Office")
                        .WithMany("Properties")
                        .HasForeignKey("Office_Num")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sales__Office");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Property_Owner", b =>
                {
                    b.HasOne("Solve_Task.Sales_Office.Model.Owner", "Owner")
                        .WithMany("Property_Owners")
                        .HasForeignKey("Owner_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Solve_Task.Sales_Office.Model.Property", "Property")
                        .WithMany("Property_Owners")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Sales__Office", b =>
                {
                    b.HasOne("Solve_Task.Sales_Office.Model.Employee", "Manager")
                        .WithOne("Sales__OfficeManage")
                        .HasForeignKey("Solve_Task.Sales_Office.Model.Sales__Office", "Emp_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Employee", b =>
                {
                    b.Navigation("Sales__OfficeManage");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Owner", b =>
                {
                    b.Navigation("Property_Owners");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Property", b =>
                {
                    b.Navigation("Property_Owners");
                });

            modelBuilder.Entity("Solve_Task.Sales_Office.Model.Sales__Office", b =>
                {
                    b.Navigation("Properties");

                    b.Navigation("employees");
                });
#pragma warning restore 612, 618
        }
    }
}
